name: Publish to itch.io

on: workflow_dispatch

env:
  # update with the name of the main binary
  binary: le-test-game
  BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
  ITCH_USER: aeon-felis
  ITCH_GAME: le-test

jobs:
  # Build for wasm
  build-wasm:
    runs-on: ubuntu-latest

    steps:
      - uses: little-core-labs/get-git-tag@v3.0.1
        id: get_version
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true
      - name: install wasm-bindgen-cli
        run: |
          cargo install wasm-bindgen-cli

      - name: Build
        run: |
          cargo build --release --target wasm32-unknown-unknown

      - name: Prepare package
        run: |
          wasm-bindgen --no-typescript --out-name le-test-game --out-dir wasm --target web target/wasm32-unknown-unknown/release/${{ env.binary }}.wasm
          cp -r assets wasm/

      - name: Package as a zip
        uses: vimtor/action-zip@v1
        with:
          files: wasm
          dest: build-wasm.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-wasm.zip
          path: build-wasm.zip

      #- name: Upload with Butler
        #uses: manleydev/butler-publish-itchio-action@master
        #env:
          #BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          #CHANNEL: web
          #PACKAGE: wasm

  # Build for Linux
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: little-core-labs/get-git-tag@v3.0.1
        id: get_version
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          override: true
      - name: install dependencies
        run: |
          sudo apt-get update; sudo apt-get install pkg-config libx11-dev libasound2-dev libudev-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev

      - name: Build
        run: |
          cargo build --release --target x86_64-unknown-linux-gnu

      - name: Prepare package
        run: |
          mkdir linux
          cp target/x86_64-unknown-linux-gnu/release/${{ env.binary }} linux/
          cp -r assets linux/

      - name: Package as a zip
        working-directory: ./linux
        run: |
          # zip --recurse-paths ../${{ env.binary }}.zip .
          zip --recurse-paths ../build-linux.zip .

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-linux.zip
          path: build-linux.zip

      #- name: Upload with Butler
        #uses: manleydev/butler-publish-itchio-action@master
        #env:
          #BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          #CHANNEL: linux
          #PACKAGE: linux

  # Build for Windows
  build-windows:
    runs-on: windows-latest

    steps:
      - uses: little-core-labs/get-git-tag@v3.0.1
        id: get_version
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc
          override: true

      - name: Build
        run: |
          cargo build --release --target x86_64-pc-windows-msvc

      - name: Prepare package
        run: |
          mkdir windows
          cp target/x86_64-pc-windows-msvc/release/${{ env.binary }}.exe windows/
          cp -r assets windows/

      - name: Package as a zip
        uses: vimtor/action-zip@v1
        with:
          files: windows
          dest: build-windows.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-windows.zip
          path: build-windows.zip

      #- name: Upload with Butler
        #env:
          #BUTLER_API_KEY: ${{ secrets.BUTLER_CREDENTIALS }}
        #run: |
          #wget -O butler.zip https://broth.itch.ovh/butler/windows-amd64/LATEST/archive/default
          #unzip butler.zip
          #./butler.exe push windows ${{ env.ITCH_USER }}/${{ env.ITCH_GAME }}
        # uses: robpc/itchio-upload-action@v1
        # with:
          # path: windows
          # project: ${{ env.ITCH_USER }}/${{ env.ITCH_GAME }}
          # channel: windows
          # api-key: ${{ secrets.BUTLER_CREDENTIALS }}

  # Build for macOS
  build-mac:
    runs-on: macOS-latest

    steps:
      - uses: little-core-labs/get-git-tag@v3.0.1
        id: get_version
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-apple-darwin
          override: true
      - name: Environment Setup
        run: |
          export CFLAGS="-fno-stack-check"
          export MACOSX_DEPLOYMENT_TARGET="10.9"

      - name: Build
        run: |
          cargo build --release --target x86_64-apple-darwin

      - name: Prepare Package
        run: |
          mkdir -p ${{ env.binary }}.app/Contents/MacOS
          cp target/x86_64-apple-darwin/release/${{ env.binary }} ${{ env.binary }}.app/Contents/MacOS/
          cp -r assets ${{ env.binary }}.app/Contents/MacOS/
          hdiutil create -fs HFS+ -volname "${{ env.binary }}" -srcfolder ${{ env.binary }}.app build-mac.dmg

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-mac.dmg
          path: build-mac.dmg

  upload-to-itch:
    runs-on: ubuntu-latest
    needs:
      - build-wasm
      - build-linux
      - build-windows
      - build-mac

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: .

      - name: Upload WASM
        uses: manleydev/butler-publish-itchio-action@master
        env:
          CHANNEL: wasm
          PACKAGE: build-wasm.zip

      - name: Upload Linux
        uses: manleydev/butler-publish-itchio-action@master
        env:
          CHANNEL: linux
          PACKAGE: build-linux.zip

      - name: Upload Windows
        uses: manleydev/butler-publish-itchio-action@master
        env:
          CHANNEL: windows
          PACKAGE: build-windows.zip

      - name: Upload Mac
        uses: manleydev/butler-publish-itchio-action@master
        env:
          CHANNEL: mac
          PACKAGE: build-mac.dmg
